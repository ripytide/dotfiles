#!/bin/bash
# ARG_OPTIONAL_SINGLE([urgency],[u],[],[normal])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.10.0 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info


die()
{
	local _ret="${2:-1}"
	test "${_PRINT_HELP:-no}" = yes && print_help >&2
	echo "$1" >&2
	exit "${_ret}"
}


begins_with_short_option()
{
	local first_option all_short_options='u'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_urgency="normal"


print_help()
{
	printf 'Usage: %s [-u|--urgency <arg>]\n' "$0"
}


parse_commandline()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-u|--urgency)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_urgency="$2"
				shift
				;;
			--urgency=*)
				_arg_urgency="${_key##--urgency=}"
				;;
			-u*)
				_arg_urgency="${_key##-u}"
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash
read notification
sudo -u ripytide DBUS_SESSION_BUS_ADDRESS="$DBUS_SESSION_BUS_ADDRESS" \
	notify-send "$notification" -u "$_arg_urgency"
#
# ] <-- needed because of Argbash
